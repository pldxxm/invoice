<div class="w-full" id="ScreenContainer">
  <div class="flex w-full items-center justify-between" id="customerHeader">
    <h1 class="text-2xl"><%= title %></h1>
  </div>

  <form id="customerSearchForm">
    <!-- Search Customer Input Container-->
    <div class="mt-4 flex items-center justify-between gap-2 md:mt-8">
      <div class="relative flex flex-1 flex-shrink-0">
        <label
          for="search"
          class="input input-bordered flex items-center gap-2 w-full"
        >
          <i class="fa-solid fa-magnifying-glass"></i>
          <input
            id="search"
            name="search"
            type="text"
            class="grow"
            placeholder="Search
   customers..."
          />
        </label>
      </div>

      <!-- Add Cutomer Button-->
      <a class="btn btn-primary" href="customers/create">
        <i class="fa-solid fa-plus fa-lg mr-2"></i>
        New Customer
      </a>
    </div>
  </form>

  <!-- Customer Data Table-->
  <div
    id="customerTableContainer"
    class="mt-6 overflow-x-auto bg-slate-100 rounded-lg p-2"
  >
    <table class="table table-zebra table-pin-rows">
      <thead>
        <tr class="row-hover">
          <th>Name</th>
          <th>Email</th>
          <th>Address</th>
          <th>Phone</th>
          <th></th>
        </tr>
      </thead>
      <tbody id="customerTableBody">
        <% if (customers.length === 0) { %>
        <tr>
          <td colspan="5" class="text-center text-gray-500 py-6">
            No customers found
          </td>
        </tr>
        <% } else { %> <% customers.forEach(function(customer){ %>
        <tr class="row-hover">
          <td><%= customer.name %></td>
          <td><%= customer.email %></td>
          <td><%= customer.address %></td>
          <td><%= customer.phone %></td>
          <td>
            <div class="flex justify-end gap-3">
              <a
                class="rounded-md border p-2 hover:bg-gray-100"
                href="customers/<%= customer._id %>/edit"
              >
                <i class="fa-solid fa-pen-to-square fa-lg"></i>
              </a>
              <button
                class="rounded-md border p-2 hover:bg-gray-100"
                onclick="deleteModal('<%= customer._id %>')"
              >
                <span class="sr-only">Delete</span>
                <i class="fa-solid fa-trash fa-lg"></i>
              </button>
            </div>
          </td>
        </tr>
        <% }); %> <% } %>
      </tbody>
    </table>

    <!-- 分页区 -->
    <div
      id="customerPaginationContainer"
      class="mt-6 flex items-center justify-between"
    >
      <!-- 显示当前展示的对象的序号范围-->

      <div id="customerPaginationInfo" class="text-sm text-gray-700">
        <% if (totalCustomers === 0) { %> Showing 0 results <% } else { %>
        Showing <%= (currentPage - 1) * limit + 1 %> to <%= Math.min(currentPage
        * limit, totalCustomers) %> of <%= totalCustomers %> results <% } %>
      </div>
      <!-- limit selection -->
      <div id="customerLimitSelection" class="flex gap-2 items-center">
        <span class="text-sm text-gray-600">Rows per page:</span>
        <button
          class="btn btn-md <%= limit === 10 ? 'btn-primary font-bold' : 'btn-outline' %>"
          onclick="setLimit(10)"
          <%= limit === 10 ? 'disabled' : '' %>
        >10</button>
        <button
          class="btn btn-md  <%= limit === 20 ? 'btn-primary font-bold' : 'btn-outline' %>"
          onclick="setLimit(20)"
          <%= limit === 20 ? 'disabled' : '' %>
        >20</button>
        <button
          class="btn btn-md  <%= limit === 50 ? 'btn-primary font-bold' : 'btn-outline' %>"
          onclick="setLimit(50)"
          <%= limit === 50 ? 'disabled' : '' %>
        >50</button>
      </div>
      <!-- 分页按钮区-->
      <div id="customerPaginationButtons" class="flex gap-2"></div>
    </div>
  </div>
</div>

<!-- Delete Customer Modal -->
<dialog id="delete-modal" class="modal">
  <div class="modal-box">
    <h3 class="font-bold text-lg">Are you sure?</h3>
    <p class="py-4">All invoices related to the customer will be deleted</p>
    <div class="modal-action">
      <form id="delete-form" method="post">
        <button class="btn btn-danger">Yes</button>
      </form>
      <form method="dialog"><button class="btn">Cancel</button></form>
    </div>
  </div>
</dialog>

<!-- pagination and Search Scripts-->
<script>
  
  let currentSearch = "<%=search %>";
  let currentPage = Number(`<%= currentPage %>`);
  let isloading = false;
  let limit = parseInt(`<%= limit %>`) || 10;

  function changePage(targetPage) {
    if (targetPage === currentPage || isloading) return;
    currentPage = targetPage;
    loadCustomers();
  }

  function setLimit(newLimit) {
    if (limit === newLimit || isloading ) return;
    limit = newLimit;
    currentPage=1;
    const btns = document.querySelectorAll('#customerLimitSelection .btn');
    btns.forEach(b => {
      const val = parseInt(b.textContent, 10);
      b.classList.toggle('btn-primary', val === newLimit);
      b.classList.toggle('btn-outline', val !== newLimit);
      b.disabled = (val === newLimit);
  });
    console.log(limit);
      loadCustomers();
}

  async function loadCustomers() {
    if (isloading) return;
    isloading = true;

    try {
      const params = new URLSearchParams({
        page: currentPage,
        limit: limit,
      });
      if (currentSearch) {
        params.set("search", currentSearch);
      }
      console.log(params);
      const url = `/api/customers/filter?${params.toString()}`;
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error("Failed to fetch customers");
      }
      const data = await response.json();
      console.log(data);
      updateTableContent(data.customers);
      updatePaginationInfo(data);
      updatePaginationButtons(data.currentPage, data.totalPages, data.hasNextPage, data.hasPrevPage);

      updateURLstate();
    } catch (error) {
      console.error("Error loading Customers:", error);
    } finally {
      isloading = false;
    }
  };

  function updateURLstate() {
    const urlObj = new URL(window.location);
    // 设置分页参数, 保持跨页面的一致性
    urlObj.searchParams.set("page", currentPage);
    urlObj.searchParams.set("limit", limit.toString());

    // 设置搜索参数
    if (currentSearch) {
      urlObj.searchParams.set("search", currentSearch);
    }
    window.history.pushState({}, "", urlObj.toString());
  }

  // 更新表格内容
  function updateTableContent(customers) {
    const tbody = document.getElementById("customerTableBody");

    tbody.innerHTML = customers
      .map(
        (customer) => `
    <tr class="row-hover">
      <td>${customer.name || ""}</td>
      <td>${customer.email || ""}</td>
      <td>${customer.address || ""}</td>
      <td>${customer.phone || ""}</td>
      <td>
        <div class="flex justify-end gap-3">
          <a class="rounded-md border p-2 hover:bg-gray-100" href="customers/${
            customer._id
          }/edit">
            <i class="fa-solid fa-pen-to-square fa-lg"></i>
          </a>
          <button class="rounded-md border p-2 hover:bg-gray-100" onclick="deleteModal('${
            customer._id
          }')">
            <span class="sr-only">Delete</span>
            <i class="fa-solid fa-trash fa-lg"></i>
          </button>
        </div>
      </td>
    </tr>
  `
      )
      .join("");
  }

  // 更新分页信息
  function updatePaginationInfo(data) {
    const page = Number(data.currentPage) || 1;
    const lim = Number(data.limit) || 10;
    const total = Number(data.totalCustomers) || 0;

    const el = document.getElementById("customerPaginationInfo");
    if (!total) {
      el.textContent = "Showing 0 results";
      return;
    }
    const start = (page - 1) * lim + 1;
    const end = Math.min(page * lim, total);
    el.textContent = `Showing ${start} to ${end} of ${total} results`;
  }

  function updatePaginationButtons(
    currentPage,
    totalPages,
    hasNextPage,
    hasPrevPage
  ) {
    currentPage = Number(currentPage);
    totalPages = Number(totalPages);

    const buttonsContainer = document.getElementById(
      "customerPaginationButtons"
    );

    const makeBtn = (page, isActive = false) =>
      `<button class="btn btn-md ${
        isActive ? "btn-primary" : "btn-outline"
      }" onclick="changePage(${page})">${page}</button>`;

    let buttonsHTML = "";

    if (hasPrevPage) {
      buttonsHTML += `<button class="btn btn-outline btn-md" onclick="changePage(${
        currentPage - 1
      })">Previous</button>`;
    }

    if (totalPages <= 0) {
      buttonsContainer.innerHTML = buttonsHTML;
      return;
    }

    // Always show first page
    buttonsHTML += makeBtn(1, currentPage === 1);

    const windowSize = 2; // how many pages around current
    const start = Math.max(2, currentPage - windowSize);
    const end = Math.min(totalPages - 1, currentPage + windowSize);

    // Left ellipsis
    if (start > 2) {
      buttonsHTML += `<span class="px-2">...</span>`;
    }

    // Middle range
    for (let i = start; i <= end; i++) {
      buttonsHTML += makeBtn(i, i === currentPage);
    }

    // Right ellipsis
    if (end < totalPages - 1) {
      buttonsHTML += `<span class="px-2">...</span>`;
    }

    // Always show last page
    if (totalPages > 1) {
      buttonsHTML += makeBtn(totalPages, currentPage === totalPages);
    }

    if (hasNextPage) {
      buttonsHTML += `<button class="btn btn-outline btn-md" onclick="changePage(${
        currentPage + 1
      })">Next</button>`;
    }
    console.log(buttonsHTML);
    buttonsContainer.innerHTML = buttonsHTML;
  }

  function deleteModal(customerId) {
    const modal = document.querySelector("#delete-modal");
    const deleteForm = document.querySelector("#delete-form");
    deleteForm.setAttribute("action", `customers/${customerId}/delete`);
    modal.showModal();
  };

  // render initial pagination buttons based on server values
  updatePaginationButtons(
      Number(`<%= currentPage %>`),
      Number(`<%= totalPages %>`),
      '<%= hasNextPage %>',
      '<%= hasPrevPage %>'
    );
</script>
